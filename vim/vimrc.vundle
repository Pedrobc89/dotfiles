" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Fuzzy file finder system
Plugin 'ctrlpvim/ctrlp.vim'

" Search inside files
Plugin 'mileszs/ack.vim'

" SuperTab for youcompleteme and ultisnips together
Plugin  'ervandew/supertab'

" Auto Completion
Plugin 'Valloric/YouCompleteMe'

" Autotag
Plugin 'craigemery/vim-autotag'

" Snippets
Plugin 'SirVer/ultisnips'

" Commentary Plugin
Plugin 'scrooloose/nerdcommenter'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Rails
Plugin 'rails.vim'

" Base 16 color plugin
Plugin 'chriskempson/base16-vim'

" Python
Plugin 'python.vim'
Plugin 'Vimjas/vim-python-pep8-indent'

" NERDtree install
Plugin 'scrooloose/nerdtree'

" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

" Git plugin not hosted on GitHub
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

"Javascript
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'pangloss/vim-javascript'

" TypeScript
Plugin 'leafgarland/typescript-vim'

" Dash
Plugin 'rizzatti/dash.vim'

" Vim Surround by tpope
Plugin 'surround.vim'

" Syntax
" Plugin 'Syntastic'
Plugin 'dense-analysis/ale'
Plugin 'andviro/flake8-vim'
Plugin 'othree/yajs.vim'

" GraphQL
Plugin 'jparise/vim-graphql'

" plugin to highlight match tags on html formats
Plugin 'Valloric/MatchTagAlways'
" Plugin 'townk/vim-autoclose'

" Settingup React dev enviroment
Plugin 'maxmellon/vim-jsx-pretty'
Plugin 'greg-js/vim-react-es6-snippets'

" StatusBar
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" Code folding
Plugin 'tmhedberg/SimpylFold'

"Auto close surroundings
Plugin 'jiangmiao/auto-pairs'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" see :h vundle for more details or wiki for FAQ

" let control p search hidden files"
let g:ctrlp_show_hidden = 1
" Ignore custom folders
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
let g:ctrlp_user_command = 'fd --type f --color=never "" %s'
let g:ctrlp_use_caching = 0

" Ack settings
nnoremap <Leader>a :Ack!<Space>

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-tab>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"


" Change default ycm keys
let g:ycm_key_list_select_completion = ['<C-j>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-k>', '<Up>']
let g:ycm_key_list_accept_completion = ['<C-y>', '<Return>']

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Ignore files
set wildignore+=*.pyc,*.o,*.obj,*.svn,*.swp,*.class,*.hg,*.DS_Store,*.min.*
let NERDTreeRespectWildIgnore=1
" Open NERDtree autmatically
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif


let base16colorspace=256
colorscheme base16-monokai
set termguicolors

let g:autotagTagsFile="tags"

let g:airline_theme='base16_monokai'

" Indentation settings
let g:python_pep8_indent_multiline_string = 0
let g:python_pep8_indent_hang_closing = 0

" Syntastic recommended settings
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0
" let g:syntastic_python_checkers=['flake8 --ignore=E225,E501,E302,E261,E262,E701,E241,E126,E127,E128,W801','python3']

let g:ale_fix_on_save = 1
let g:ale_python_pylint_options = '--load-plugins pylint_django'
let g:ale_fixers = {
      \   '*': ['remove_trailing_lines', 'trim_whitespace'],
      \'javascript': ['prettier', 'eslint'],
      \'python': ['autopep8', 'reorder-python-imports', 'yapf']
      \}

let g:SimpylFold_docstring_preview = 1


" Autotags
let g:autotagCtagsCmd = 'ctags -R --exclude=.git --exclude=node_modules --exclude=test'
