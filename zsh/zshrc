# profiling zsh

# zmodload zsh/zprof

export DOTFILES=$HOME/.dotfiles

# Source the configured path variables
test -e "${HOME}/.profile" && source "${HOME}/.profile"

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export ZSH_CUSTOM=$DOTFILES/zsh/custom

# Disables virtual environment prompt change (agnoster-custom theme will show it)
export VIRTUAL_ENV_DISABLE_PROMPT=1
export FZF_DEFAULT_COMMAND='find .'

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster" # set by `omz`

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git gitfast python tmux docker docker-compose kubectl branch colorize gh ssh-agent)
export ZSH_TMUX_AUTOSTART=false

source $ZSH/oh-my-zsh.sh

# User configuration
#
# 10ms for key sequences
KEYTIMEOUT=1

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LC_ALL="en_US.UTF-8"
export LANG=en_US.UTF-8


# Preferred editor for local and remote sessions
export EDITOR='nvim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/github-techlabs"
zstyle :omz:plugins:ssh-agent identities github-techlabs github-polly github-Pedrobc89

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
unalias ipython
alias zshconfig="vim $DOTFILES/zsh/zshrc"
alias vimconfig="cd $DOTFILES/vim ; vim -O vimrc vimrc.vundle"
alias tmuxconfig="cd $DOTFILES/tmux ; vim -O *"

alias gs='git status'
alias python="python3"
alias pip='pip3'
alias :q='exit'
alias light='base16_classic-light'
alias dark='base16_classic-dark'

# fzf aliases
alias tldrf='tldr --list | fzf --preview "tldr {1} --color=always" --preview-window=right,70% | xargs tldr'
alias gcof="git branch | fzf | xargs git checkout"
alias fzfp='fzf --preview="bat --color=always --style=numbers {}"'
alias nvimf='fzfp | xargs nvim'

alias .cat=/bin/cat
alias cat=bat
alias /vim=/usr/bin/vim

# easy switch nvim config
alias nvim-kick="NVIM_APPNAME=kickstart nvim"
# leave default as LazyVim for now

function nvims() {
  items=("default" "kickstart")
  config=$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=~50% --layout=reverse --border --exit-0)
  if [[ -z $config ]]; then
    echo "Nothing selected"
    return 0
  elif [[ $config == "default" ]]; then
    config=""
  fi
  NVIM_APPNAME=$config nvim $@
}


source ~/
test -e "${HOME}/.config/work/config.sh" && source "${HOME}/.config/work/config.sh"

# Enables clipbord sharing why it works still a mistery!!
export DISPLAY=:0.0

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
export PATH="/usr/local/sbin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export DOCKER_DEFAULT_PLATFORM=linux/amd64


eval "$(zoxide init zsh)"

# zprof > /tmp/zsh_prof
